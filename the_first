#include <iostream>

using namespace std;

const int MAXN = 100000;
long long rsq[MAXN*4];
long long a[MAXN];

void build(int t, int l, int r)
{
    if(l + 1 == r)
    {
        rsq[t] = a[l];
    }
    else
    {
        int m = (l + r) / 2;
        build(t * 2 + 1, l, m);
        build(t * 2 + 2, m, r);
        rsq[t] = rsq[2 * t + 1] + rsq[2 * t + 2];
    }
}
void set(int t, int l, int r, int i, long long v)
{
    if(l + 1 == r)
    {
        rsq[t] = v;
    }
    else
    {
        int m = (l + r) / 2;
        if (i < m)
            set(t * 2 + 1, l, m, i, v);
        else
            set(t * 2 + 2, m, r, i, v);
        rsq[t] = rsq[2 * t + 1] + rsq[2 * t + 2];
    }
}
long long get(int t, int l, int r, int x, int y)
{
    if(y <= l || r <= x)
        return 0;

    if(x <= l && r <= y)
        return rsq[t];
    int m = (l + r) / 2;
    return get(2 * t + 1, l, m, x ,y)
        + get(2 * t + 2, m, r, x ,y);
}

int main()
{
    long long n, m, x , y;
    cin >> n >> m;
    for(int i = 0; i < n; ++i)
        cin >> a[i];
    build(0, 0, n);

   for(int i = 0; i < m; ++i){
        int k;
        cin >> k >> x >> y;
        if (k == 1)
            set(0, 0, n, x, y);
        else
            cout << get(0, 0, n, x, y) << endl;
    }
    return 0;
}

